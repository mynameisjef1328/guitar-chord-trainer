<!DOCTYPE html>
<html>
<head>
    <title>Guitar Chord Trainer</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f0f0f0;
        }
        #chordDisplay {
            font-size: 48px;
            margin: 20px;
            padding: 20px;
            background-color: white;
            border-radius: 10px;
            min-width: 200px;
            text-align: center;
        }
        .controls, .stats {
            margin: 10px;
            padding: 15px;
            background-color: #e0e0e0;
            border-radius: 5px;
            width: 300px;
        }
        button {
            padding: 8px 16px;
            margin: 5px;
            cursor: pointer;
        }
        select, input {
            padding: 5px;
            margin: 5px;
        }
    </style>
</head>
<body>
    <div class="controls">
        <label for="keySelect">Key:</label>
        <select id="keySelect">
            <option value="C">C Major</option>
            <option value="G">G Major</option>
            <option value="D">D Major</option>
            <option value="A">A Major</option>
            <option value="E">E Major</option>
            <option value="Am">A Minor</option>
            <option value="Em">E Minor</option>
        </select>

        <label for="bpm">BPM:</label>
        <input type="number" id="bpm" value="60" min="30" max="240">

        <label for="difficulty">Difficulty:</label>
        <select id="difficulty">
            <option value="1">Easy (3 chords)</option>
            <option value="2">Medium (4 chords)</option>
            <option value="3">Hard (6 chords)</option>
        </select>

        <button onclick="startTrainer()">Start</button>
        <button onclick="stopTrainer()">Stop</button>
    </div>

    <div id="chordDisplay">Select options and press Start</div>

    <div class="stats">
        <p>Practice Stats:</p>
        <p>Chords Played: <span id="chordCount">0</span></p>
        <p>Time Practiced: <span id="timePracticed">0s</span></p>
        <p>Changes/Minute: <span id="changesPerMin">0</span></p>
    </div>

    <audio id="backingTrack" loop></audio>
    <audio id="metronomeClick"></audio>

    <script>
        const chordLibrary = {
            'C': ['C', 'Dm', 'Em', 'F', 'G', 'Am'],
            'G': ['G', 'Am', 'Bm', 'C', 'D', 'Em'],
            'D': ['D', 'Em', 'F#m', 'G', 'A', 'Bm'],
            'A': ['A', 'B', 'C#m', 'D', 'E', 'F#m'],
            'E': ['E', 'F#m', 'G#m', 'A', 'B', 'C#m'],
            'Am': ['Am', 'C', 'Dm', 'E', 'F', 'G'],
            'Em': ['Em', 'G', 'Am', 'B', 'C', 'D']
        };

        const backingTracks = {
            'C': 'https://www.example.com/c-major-track.mp3',
            'G': 'https://www.example.com/g-major-track.mp3',
            'D': 'https://www.example.com/d-major-track.mp3',
            'A': 'https://www.example.com/a-major-track.mp3',
            'E': 'https://www.example.com/e-major-track.mp3',
            'Am': 'https://www.example.com/a-minor-track.mp3',
            'Em': 'https://www.example.com/e-minor-track.mp3'
        };

        let intervalId = null;
        let metronomeId = null;
        let currentChords = [];
        let stats = {
            chordCount: 0,
            startTime: null,
            totalTime: 0
        };

        const chordDisplay = document.getElementById('chordDisplay');
        const audio = document.getElementById('backingTrack');
        const metronome = document.getElementById('metronomeClick');
        const chordCountEl = document.getElementById('chordCount');
        const timePracticedEl = document.getElementById('timePracticed');
        const changesPerMinEl = document.getElementById('changesPerMin');

        function getRandomChord() {
            return currentChords[Math.floor(Math.random() * currentChords.length)];
        }

        function updateChord() {
            chordDisplay.textContent = getRandomChord();
            stats.chordCount++;
            updateStats();
        }

        function playMetronome() {
            metronome.currentTime = 0;
            metronome.play();
        }

        function updateStats() {
            chordCountEl.textContent = stats.chordCount;
            if (stats.startTime) {
                const currentTime = (Date.now() - stats.startTime) / 1000;
                timePracticedEl.textContent = `${Math.floor(currentTime + stats.totalTime)}s`;
                const cpm = Math.round((stats.chordCount * 60) / (currentTime + stats.totalTime));
                changesPerMinEl.textContent = cpm;
            }
        }

        function startTrainer() {
            stopTrainer();

            const key = document.getElementById('keySelect').value;
            const bpm = parseInt(document.getElementById('bpm').value);
            const difficulty = parseInt(document.getElementById('difficulty').value);

            // Set chords based on difficulty
            const allChords = chordLibrary[key];
            currentChords = allChords.slice(0, difficulty === 1 ? 3 : difficulty === 2 ? 4 : 6);

            const interval = 60000 / bpm;

            // Start chord changes
            updateChord();
            intervalId = setInterval(updateChord, interval);

            // Start metronome
            metronome.src = 'https://www.soundjay.com/buttons/beep-01a.mp3'; // Simple click sound
            metronomeId = setInterval(playMetronome, interval);

            // Start backing track
            startBackingTrack(key);

            // Start timing
            stats.startTime = Date.now();
        }

        function stopTrainer() {
            if (intervalId) {
                clearInterval(intervalId);
                intervalId = null;
            }
            if (metronomeId) {
                clearInterval(metronomeId);
                metronomeId = null;
            }
            if (stats.startTime) {
                stats.totalTime += (Date.now() - stats.startTime) / 1000;
                stats.startTime = null;
            }
            audio.pause();
            audio.currentTime = 0;
            metronome.pause();
            chordDisplay.textContent = "Stopped - Select options and press Start";
            updateStats();
        }

        function startBackingTrack(key) {
            // Placeholder - replace with real tracks
            audio.src = 'https://www.soundjay.com/buttons/beep-02.mp3'; // Different placeholder
            audio.play();
        }

        // Input validation
        document.getElementById('bpm').addEventListener('change', function(e) {
            if (this.value < 30) this.value = 30;
            if (this.value > 240) this.value = 240;
        });

        // Reset stats on page reload
        window.addEventListener('unload', () => {
            stats = { chordCount: 0, startTime: null, totalTime: 0 };
        });
    </script>
</body>
</html>
​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​
